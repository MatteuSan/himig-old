//
//  Copyright (c) 2021 Matteu
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use '~@matteusan/sentro';

$button-width: max-content;
$button-padding: 0.4rem 0.6rem;
$button-gap: 0.3rem;
$button-fill: sentro.token-get('accent');
$button-ink: sentro.token-get('accent-ink');
$button-radius: sentro.token-get('radius-small');

$button-label-size: sentro.px-to-rem(16px);

$button-icon-size: sentro.px-to-rem(24px);
$button-icon-ink: inherit;

@mixin use() {
    .hc-button {
        width: 100%;
        min-width: 90px;
        max-width: sentro.key-create('button-width', $button-width);
        
        display: inline-flex;
        flex-flow: row nowrap;
        justify-content: center;
        align-items: center;
        
        padding: sentro.key-create('button-padding', $button-padding);
        box-sizing: border-box;
        @include sentro.prefix(transition, all 0.1s ease);
    
        background: rgba(0 0 0 / 0);
        border: 1px solid rgba(0 0 0 / 0);
        color: sentro.key-create('button-fill', $button-fill);
    
        border-radius: sentro.key-create('button-radius', $button-radius);
        
        user-select: none;
        line-height: inherit;
        overflow: visible;
        vertical-align: middle;
        cursor: pointer;
        
        & > * + * {
            margin-left: sentro.key-create('button-gap', $button-gap);
        }
        
        &::-moz-focus-inner {
            padding: 0;
            border: 0;
        }
        
        &:active {
            color: sentro.key-create('button-fill-active', sentro.token-get('accent-light'));
        }
        
        &:focus {
            // outline: 3px dashed sentro.key-create('button-active-outline', rgba(#f1f1f1, 27%));
        }
        
        &:disabled,
        &.disabled {
            @include sentro.key-bind('button-fill', sentro.token-get('accent-dark'));
            @include sentro.key-bind('button-fill-active', sentro.token-get('accent-dark'));
            cursor: default;
        }
        
        .hc-button__icon {
            position: relative;
            font-size: sentro.key-create('button-icon-size', $button-icon-size);
            color: sentro.key-create('button-icon-ink', $button-icon-ink);
            /* @fallback */
            width: sentro.key-create('button-icon-size', $button-icon-size);
            height: sentro.key-create('button-icon-size', $button-icon-size);
        }
        
        .hc-button__label {
            font-size: sentro.key-create('button-label-size', $button-label-size);
            color: sentro.key-create('button-label-ink', inherit);
            line-height: 1.125rem;
            font-weight: 700;
            text-align: left;
        }
        
        // Variants
        &.hc-button--inverted {
            @include sentro.key-bind('button-fill', sentro.token-get('accent-inverted'));
            @include sentro.key-bind('button-ink', sentro.token-get('accent-inverted-ink'));
            @include sentro.key-bind('button-fill-active', sentro.token-get('accent-inverted-light'));
        }
        
        &.hc-button--outlined {
            color: sentro.key-create('button-fill', $button-fill);
            border-color: sentro.key-create('button-fill', $button-fill);
            box-shadow: 0 3px sentro.key-create('button-shadow', sentro.token-get('accent-dark'));
            
            &:hover {
                background-color: sentro.key-create('button-fill', $button-fill);
                color: sentro.key-create('button-ink', $button-ink);
                border-color: sentro.key-create('button-fill', $button-fill);
                
            }
    
            &:active {
                background-color: sentro.key-create('button-fill-active', sentro.token-get('accent-light'));
                color: sentro.key-create('button-ink', $button-ink);
                border-color: sentro.key-create('button-fill-active', sentro.token-get('accent-light'));
                box-shadow: 0 0 sentro.key-create('button-shadow', sentro.token-get('accent-dark'));
                transform: translateY(2px);
                // @include sentro.elevation-apply(4);
            }
    
            &:disabled,
            &.disabled {
                @include sentro.key-bind('button-fill', sentro.token-get('accent-dark'));
                @include sentro.key-bind('button-ink', sentro.token-get('accent-dark'));
                @include sentro.key-bind('button-fill-active', sentro.token-get('accent-dark'));
                background: rgba(0 0 0 / 0);
                @include sentro.key-bind('button-shadow', sentro.token-get('accent-inverted-light'));
    
                &:active {
                    box-shadow: 0 3px sentro.key-create('button-shadow', sentro.token-get('accent-dark'));
                    transform: none;
                }
            }
        }
    
        &.hc-button--filled {
            background: sentro.key-create('button-fill', $button-fill);
            color: sentro.key-create('button-ink', $button-ink);
            border-color: sentro.key-create('button-fill', $button-fill);
            box-shadow: 0 3px sentro.key-create('button-shadow', sentro.token-get('accent-dark'));
        
            &:active {
                background-color: sentro.key-create('button-fill-active', sentro.token-get('accent-light'));
                border-color: sentro.key-create('button-fill-active', sentro.token-get('accent-light'));
                box-shadow: 0 0 sentro.key-create('button-shadow', sentro.token-get('accent-dark'));
                transform: translateY(2px);
            }
            
            &:disabled {
                @include sentro.key-bind('button-shadow', sentro.token-get('accent-inverted-light'));
    
                &:active {
                    box-shadow: 0 3px sentro.key-create('button-shadow', sentro.token-get('accent-dark'));
                    transform: none;
                }
            }
        }
    }
}
